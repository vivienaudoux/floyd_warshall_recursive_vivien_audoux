#Importing the required modules.
import unittest
import sys
sys.path.append("Functions")
from functions import *

#Defining unittest for the 3 functions that compose our recursive implementation of Floyd Warshall.
class TestFloydWarshallRecursive(unittest.TestCase):

    def test_simple_graph(self):
        graph = {
            0: {1: 5, 2: 3},
            1: {2: 1},
            2: {}
        }
        dist = [
            [0, 5, 3],
            [float('inf'), 0, 1],
            [float('inf'), float('inf'), 0]
        ]
        self.assertEqual(floyd_warshall_recursive(graph, dist, 0, 2, 1), 3)

class TestInitializeDistanceMatrix(unittest.TestCase):

    def test_simple_graph(self):
        graph = [
            [0, 5, 3],
            [0, 0, 1],
            [0, 0, 0]
        ]
        expected_dist = [
            [0, 5, 3],
            [float('inf'), 0, 1],
            [float('inf'), float('inf'), 0]
        ]
        self.assertEqual(initialize_distance_matrix(graph), expected_dist)

class TestFloydWarshall(unittest.TestCase):

    def test_floyd_warshall(self):
        graph = [
            [0, 5, float('inf'), 10],
            [float('inf'), 0, 3, float('inf')],
            [float('inf'), float('inf'), 0, 1],
            [float('inf'), float('inf'), float('inf'), 0]
        ]

        expected_result = [
            [0, 5, 8, 9],
            [float('inf'), 0, 3, 4],
            [float('inf'), float('inf'), 0, 1],
            [float('inf'), float('inf'), float('inf'), 0]
        ]

        result = floyd_warshall(graph)
        self.assertEqual(result, expected_result)

if __name__ == '__main__':
    unittest.main()